{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":gitSignOff",
    "helpers:pinGitHubActionDigests"
  ],
  // This ensures that the gitAuthor and gitSignOff fields match
  "gitAuthor": "renovate[bot] <bot@renovateapp.com>",
  "includePaths": [
    ".github/workflows/**",
    "action.yaml",
    "go.mod",
    "go.sum",
  ],
  postUpdateOptions: [
    "gomodTidy"
  ],
  "pinDigests": true,
  "ignorePresets": [":prHourlyLimit2"],
  "separateMajorMinor": true,
  "separateMultipleMajor": true,
  "separateMinorPatch": true,
  "pruneStaleBranches": true,
  "baseBranches": [
    "main"
  ],
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "labels": [
    "dependencies",
    "renovate/stop-updating",
  ],
  "stopUpdatingLabel": "renovate/stop-updating",
  "packageRules": [
    {
      "groupName": "all github action dependencies",
      "groupSlug": "all-github-action",
      "matchPaths": [
        ".github/workflows/**"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "digest",
        "patch",
        "pin",
        "pinDigest"
      ]
    },
    {
      "groupName": "all go dependencies main",
      "groupSlug": "all-go-deps-main",
      "matchFiles": [
        "go.mod",
        "go.sum"
      ],
      "postUpdateOptions": [
        // update source import paths on major updates
        "gomodUpdateImportPaths",
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "digest",
        "patch",
        "pin",
        "pinDigest"
      ],
      matchBaseBranches: [
        "main"
      ],
    },
    {
      "groupName": "Go",
      "matchDepNames": [
        "go",
        "docker.io/library/golang"
      ],
    },
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "^\\.github/workflows/[^/]+\\.yaml$",
      ],
      // This regex manages version strings in GitHub actions workflow files,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+version: (?<currentValue>.*)"
      ]
    },
    {
      "fileMatch": [
        "^action\\.yaml$",
      ],
      // This regex manages version strings in GitHub actions files,
      // similar to the examples shown here:
      //   https://docs.renovatebot.com/modules/manager/regex/#advanced-capture
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)\\s+.+default: '(?<currentValue>.*)'"
      ]
    },
  ]
}
